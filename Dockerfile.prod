ARG BASE_IMAGE_TAG AWS_ACCOUNT_ID ENV_CONFIG VERBOSE
# Build the node app
FROM node:16-alpine AS build

ARG BASE_IMAGE_TAG AWS_ACCOUNT_ID ENV_CONFIG VERBOSE

ENV ENV_CONFIG="${ENV_CONFIG}" REACT_APP_ENV="${ENV_CONFIG}"

WORKDIR /app

# COPY package.json package-lock.json ./
COPY package.json package-lock.json ./
COPY pipes-protobufs/ /app/src/_proto/
COPY public/ /app/public/
copy src/ /app/src/

# Create a file with the name of the ENV_CONFIG variable
RUN echo "ENV_CONFIG value is: ${ENV_CONFIG}" && \
    apk add protoc protobuf protobuf-dev grpc git && \
    apk add protoc-gen-js --repository https://dl-cdn.alpinelinux.org/alpine/edge/testing && \
    npm i -g protoc-gen-grpc-web && \
    npm install --omit=dev && cd /app/src/_proto && \
   /usr/bin/protoc -I=/app/src/_proto /app/src/_proto/*.proto --js_out=import_style=commonjs:/app/src/_proto --grpc-web_out=import_style=commonjs,mode=grpcwebtext:/app/src/_proto

RUN echo "REACT_APP_ENV value is: ${REACT_APP_ENV}" && \
    if [ "$VERBOSE" = "true" ]; then \
    npm ls --depth=0 && npm run build --loglevel verbose; \
else \
    npm run build; \
fi

# Serve using NGINX
ARG BASE_IMAGE_TAG AWS_ACCOUNT_ID
FROM ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/nrel-split-nginx:${BASE_IMAGE_TAG}
ARG ENV_CONFIG

ENV NGINX_BACKEND_HOST="html" \
NGINX_VHOST_PRESET="html" \
NGINX_SERVER_ROOT="/var/www/html/web" \
NGINX_MOREHEADERS_ENABLED="on" \
REACT_APP_ENV=$ENV_CONFIG

USER root

WORKDIR /var/www/html

# Copy everything from project root into html container's working dir
COPY --from=build --chown=wodby:wodby /app/build web/

USER wodby
